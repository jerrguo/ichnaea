version: 1
descriptor_core_version: 1
descriptors {
  id: "tensorflow_extension"
  version: 1
}
descriptors {
  id: "custom"
  version: 1
}
graphs {
  id: "main"
  nodes {
    id: "NMS"
    inputs: "concat_box_conf"
    inputs: "Squeeze"
    inputs: "concat_priorbox"
    operation: "_NMS_TRT"
    fields {
      key: "backgroundLabelId_u_int"
      value {
        i: 0
      }
    }
    fields {
      key: "confSigmoid_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "confidenceThreshold_u_float"
      value {
        d: 0.30000001192092896
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "inputOrder_u_ilist"
      value {
        i_list {
          val: 1
          val: 0
          val: 2
        }
      }
    }
    fields {
      key: "isNormalized_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "keepTopK_u_int"
      value {
        i: 100
      }
    }
    fields {
      key: "nmsThreshold_u_float"
      value {
        d: 0.6000000238418579
      }
    }
    fields {
      key: "numClasses_u_int"
      value {
        i: 91
      }
    }
    fields {
      key: "shareLocation_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "topK_u_int"
      value {
        i: 100
      }
    }
    fields {
      key: "varianceEncodedInTarget_u_int"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "concat_priorbox"
    inputs: "MultipleGridAnchorGenerator"
    operation: "Concat"
    fields {
      key: "axis"
      value {
        i: 2
      }
    }
  }
  nodes {
    id: "MultipleGridAnchorGenerator"
    inputs: "Const"
    operation: "_GridAnchor_TRT"
    fields {
      key: "aspectRatios_u_flist"
      value {
        d_list {
          val: 1.0
          val: 2.0
          val: 0.5
          val: 3.0
          val: 0.33000001311302185
        }
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "featureMapShapes_u_ilist"
      value {
        i_list {
          val: 19
          val: 10
          val: 5
          val: 3
          val: 2
          val: 1
        }
      }
    }
    fields {
      key: "maxSize_u_float"
      value {
        d: 0.949999988079071
      }
    }
    fields {
      key: "minSize_u_float"
      value {
        d: 0.20000000298023224
      }
    }
    fields {
      key: "numLayers_u_int"
      value {
        i: 6
      }
    }
    fields {
      key: "variance_u_flist"
      value {
        d_list {
          val: 0.10000000149011612
          val: 0.10000000149011612
          val: 0.20000000298023224
          val: 0.20000000298023224
        }
      }
    }
  }
  nodes {
    id: "Const"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 2
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_Const"
      }
    }
  }
  nodes {
    id: "Squeeze"
    inputs: "concat_box_loc"
    operation: "Squeeze"
    fields {
      key: "axes"
      value {
        i_list {
          val: 2
        }
      }
    }
  }
  nodes {
    id: "concat_box_loc"
    inputs: "BoxPredictor_0/Reshape"
    inputs: "BoxPredictor_1/Reshape"
    inputs: "BoxPredictor_2/Reshape"
    inputs: "BoxPredictor_3/Reshape"
    inputs: "BoxPredictor_4/Reshape"
    inputs: "BoxPredictor_5/Reshape"
    operation: "_FlattenConcat_TRT"
    fields {
      key: "axis_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "ignoreBatch_u_int"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/Reshape"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_5/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_5/stack"
    inputs: "BoxPredictor_5/strided_slice"
    inputs: "BoxPredictor_5/stack/1"
    inputs: "BoxPredictor_5/stack/2"
    inputs: "BoxPredictor_5/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice"
    inputs: "BoxPredictor_5/Shape"
    inputs: "BoxPredictor_5/strided_slice/stack"
    inputs: "BoxPredictor_5/strided_slice/stack_1"
    inputs: "BoxPredictor_5/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/Shape"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 64
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 64
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 64
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 128
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 128
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 128
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 128
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 256
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 1280
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1280
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1280
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1280
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1280
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv_1/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 320
          val: 1280
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv_1/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 320
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 320
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 320
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 320
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 960
          val: 320
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 960
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 960
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 160
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/add"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 576
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 576
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 576
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 96
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/add"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 384
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 384
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 384
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 64
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/add"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/add"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 192
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 192
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 192
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 32
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/add"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 144
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 144
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 144
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 24
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 96
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 96
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 96
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 16
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 16
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 16
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 16
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 16
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 32
          val: 16
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/Conv/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 32
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 32
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/Conv/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/Conv2D"
    inputs: "Input"
    inputs: "FeatureExtractor/MobilenetV2/Conv/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/Conv/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 3
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/Conv/weights"
      }
    }
  }
  nodes {
    id: "Input"
    operation: "Input"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 3
          val: 300
          val: 300
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 144
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 144
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 144
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 24
          val: 144
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 192
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 192
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 192
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 32
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 192
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 192
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 192
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_4/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 32
          val: 192
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 384
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 384
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 384
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 64
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 384
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 384
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 384
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_7/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 64
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 384
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 384
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 384
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_8/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 64
          val: 384
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 576
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 576
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 576
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 96
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 576
          val: 96
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 576
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 576
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_11/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 96
          val: 576
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 960
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 960
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 960
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 160
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 960
          val: 160
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 960
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 960
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Relu6"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add_1"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/sub"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/sub"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/mul_2"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "sub"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/mul_2"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/mul"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/Rsqrt"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add"
    operation: "Unary"
    fields {
      key: "func"
      value {
        s: "rsqrt"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add/y"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add/y"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add/y"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/mul_1"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/mul"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "mul"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_14/add"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 160
          val: 960
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/Reshape"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_4/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_4/stack"
    inputs: "BoxPredictor_4/strided_slice"
    inputs: "BoxPredictor_4/stack/1"
    inputs: "BoxPredictor_4/stack/2"
    inputs: "BoxPredictor_4/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice"
    inputs: "BoxPredictor_4/Shape"
    inputs: "BoxPredictor_4/strided_slice/stack"
    inputs: "BoxPredictor_4/strided_slice/stack_1"
    inputs: "BoxPredictor_4/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/Shape"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/Reshape"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_3/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_3/stack"
    inputs: "BoxPredictor_3/strided_slice"
    inputs: "BoxPredictor_3/stack/1"
    inputs: "BoxPredictor_3/stack/2"
    inputs: "BoxPredictor_3/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice"
    inputs: "BoxPredictor_3/Shape"
    inputs: "BoxPredictor_3/strided_slice/stack"
    inputs: "BoxPredictor_3/strided_slice/stack_1"
    inputs: "BoxPredictor_3/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/Shape"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/Reshape"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_2/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_2/stack"
    inputs: "BoxPredictor_2/strided_slice"
    inputs: "BoxPredictor_2/stack/1"
    inputs: "BoxPredictor_2/stack/2"
    inputs: "BoxPredictor_2/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice"
    inputs: "BoxPredictor_2/Shape"
    inputs: "BoxPredictor_2/strided_slice/stack"
    inputs: "BoxPredictor_2/strided_slice/stack_1"
    inputs: "BoxPredictor_2/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/Shape"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/Reshape"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_1/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_1/stack"
    inputs: "BoxPredictor_1/strided_slice"
    inputs: "BoxPredictor_1/stack/1"
    inputs: "BoxPredictor_1/stack/2"
    inputs: "BoxPredictor_1/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice"
    inputs: "BoxPredictor_1/Shape"
    inputs: "BoxPredictor_1/strided_slice/stack"
    inputs: "BoxPredictor_1/strided_slice/stack_1"
    inputs: "BoxPredictor_1/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/Shape"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/Relu6"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 1280
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/Reshape"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_0/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_0/stack"
    inputs: "BoxPredictor_0/strided_slice"
    inputs: "BoxPredictor_0/stack/1"
    inputs: "BoxPredictor_0/stack/2"
    inputs: "BoxPredictor_0/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice"
    inputs: "BoxPredictor_0/Shape"
    inputs: "BoxPredictor_0/strided_slice/stack"
    inputs: "BoxPredictor_0/strided_slice/stack_1"
    inputs: "BoxPredictor_0/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/Shape"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Relu6"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 576
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "concat_box_conf"
    inputs: "BoxPredictor_0/Reshape_1"
    inputs: "BoxPredictor_1/Reshape_1"
    inputs: "BoxPredictor_2/Reshape_1"
    inputs: "BoxPredictor_3/Reshape_1"
    inputs: "BoxPredictor_4/Reshape_1"
    inputs: "BoxPredictor_5/Reshape_1"
    operation: "_FlattenConcat_TRT"
    fields {
      key: "axis_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "ignoreBatch_u_int"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/Reshape_1"
    inputs: "BoxPredictor_5/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_5/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_5/stack_1"
    inputs: "BoxPredictor_5/strided_slice"
    inputs: "BoxPredictor_5/stack_1/1"
    inputs: "BoxPredictor_5/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_5/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_5/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
    inputs: "BoxPredictor_5/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/Reshape_1"
    inputs: "BoxPredictor_4/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_4/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_4/stack_1"
    inputs: "BoxPredictor_4/strided_slice"
    inputs: "BoxPredictor_4/stack_1/1"
    inputs: "BoxPredictor_4/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_4/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_4/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_4/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/Reshape_1"
    inputs: "BoxPredictor_3/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_3/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_3/stack_1"
    inputs: "BoxPredictor_3/strided_slice"
    inputs: "BoxPredictor_3/stack_1/1"
    inputs: "BoxPredictor_3/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_3/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_3/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_3/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/Reshape_1"
    inputs: "BoxPredictor_2/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_2/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_2/stack_1"
    inputs: "BoxPredictor_2/strided_slice"
    inputs: "BoxPredictor_2/stack_1/1"
    inputs: "BoxPredictor_2/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_2/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_2/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "BoxPredictor_2/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/Reshape_1"
    inputs: "BoxPredictor_1/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_1/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_1/stack_1"
    inputs: "BoxPredictor_1/strided_slice"
    inputs: "BoxPredictor_1/stack_1/1"
    inputs: "BoxPredictor_1/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_1/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_1/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/Conv_1/Relu6"
    inputs: "BoxPredictor_1/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 1280
          val: 546
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/Reshape_1"
    inputs: "BoxPredictor_0/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_0/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_0/stack_1"
    inputs: "BoxPredictor_0/strided_slice"
    inputs: "BoxPredictor_0/stack_1/1"
    inputs: "BoxPredictor_0/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 273
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_0/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_0/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Relu6"
    inputs: "BoxPredictor_0/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 576
          val: 273
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "MarkOutput_0"
    inputs: "NMS"
    operation: "MarkOutput"
  }
}
referenced_data {
  key: "orders_N+C_+CK"
  value {
    dim_orders_list {
      val {
        orders {
          key: -1
          value {
            val: 0
            val: 2
            val: 2147483647
            val: 1
          }
        }
      }
      val {
        orders {
          key: -1
          value {
            val: 2
            val: 2147483647
            val: 1
            val: 0
          }
        }
      }
    }
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/BoxEncodingPredictor/biases"
  value {
    blob: "(...48 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/BoxEncodingPredictor/weights"
  value {
    blob: "(...248832 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/ClassPredictor/biases"
  value {
    blob: "(...1092 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/ClassPredictor/weights"
  value {
    blob: "(...5660928 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack/1"
  value {
    blob: ";\004\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack_1/1"
  value {
    blob: ";\004\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack_1/2"
  value {
    blob: "[\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/BoxEncodingPredictor/weights"
  value {
    blob: "(...1105920 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/ClassPredictor/biases"
  value {
    blob: "(...2184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/ClassPredictor/weights"
  value {
    blob: "(...25159680 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack/1"
  value {
    blob: "X\002\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack_1/1"
  value {
    blob: "X\002\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack_1/2"
  value {
    blob: "[\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/BoxEncodingPredictor/weights"
  value {
    blob: "(...442368 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/ClassPredictor/biases"
  value {
    blob: "(...2184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/ClassPredictor/weights"
  value {
    blob: "(...10063872 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack/1"
  value {
    blob: "\226\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack_1/1"
  value {
    blob: "\226\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack_1/2"
  value {
    blob: "[\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/BoxEncodingPredictor/weights"
  value {
    blob: "(...221184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/ClassPredictor/biases"
  value {
    blob: "(...2184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/ClassPredictor/weights"
  value {
    blob: "(...5031936 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack/1"
  value {
    blob: "6\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack_1/1"
  value {
    blob: "6\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack_1/2"
  value {
    blob: "[\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/BoxEncodingPredictor/weights"
  value {
    blob: "(...221184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/ClassPredictor/biases"
  value {
    blob: "(...2184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/ClassPredictor/weights"
  value {
    blob: "(...5031936 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack/1"
  value {
    blob: "\030\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack_1/1"
  value {
    blob: "\030\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack_1/2"
  value {
    blob: "[\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/BoxEncodingPredictor/weights"
  value {
    blob: "(...110592 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/ClassPredictor/biases"
  value {
    blob: "(...2184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/ClassPredictor/weights"
  value {
    blob: "(...2515968 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack/1"
  value {
    blob: "\006\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack_1/1"
  value {
    blob: "\006\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack_1/2"
  value {
    blob: "[\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_Const"
  value {
    blob: "\000\000\200?\000\000\200?"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv/weights"
  value {
    blob: "(...3456 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta"
  value {
    blob: "(...5120 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma"
  value {
    blob: "(...5120 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  value {
    blob: "(...5120 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  value {
    blob: "(...5120 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/Conv_1/weights"
  value {
    blob: "(...1638400 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  value {
    blob: "(...1152 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  value {
    blob: "(...64 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  value {
    blob: "(...64 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  value {
    blob: "(...64 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  value {
    blob: "(...64 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv/project/weights"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  value {
    blob: "(...3456 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights"
  value {
    blob: "(...6144 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights"
  value {
    blob: "(...9216 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  value {
    blob: "(...13824 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights"
  value {
    blob: "(...147456 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  value {
    blob: "(...20736 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights"
  value {
    blob: "(...221184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights"
  value {
    blob: "(...221184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  value {
    blob: "(...20736 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights"
  value {
    blob: "(...221184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  value {
    blob: "(...384 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights"
  value {
    blob: "(...221184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  value {
    blob: "(...20736 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights"
  value {
    blob: "(...221184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights"
  value {
    blob: "(...368640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  value {
    blob: "(...34560 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights"
  value {
    blob: "(...614400 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights"
  value {
    blob: "(...614400 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  value {
    blob: "(...34560 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights"
  value {
    blob: "(...614400 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  value {
    blob: "(...640 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights"
  value {
    blob: "(...614400 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  value {
    blob: "(...34560 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  value {
    blob: "(...3840 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights"
  value {
    blob: "(...614400 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  value {
    blob: "(...1280 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  value {
    blob: "(...1280 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  value {
    blob: "(...1280 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  value {
    blob: "(...1280 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights"
  value {
    blob: "(...1228800 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  value {
    blob: "(...5184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights"
  value {
    blob: "(...13824 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights"
  value {
    blob: "(...13824 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  value {
    blob: "(...5184 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  value {
    blob: "(...576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights"
  value {
    blob: "(...13824 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights"
  value {
    blob: "(...18432 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  value {
    blob: "(...6912 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  value {
    blob: "(...6912 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  value {
    blob: "(...6912 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  value {
    blob: "(...768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights"
  value {
    blob: "(...49152 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  value {
    blob: "(...13824 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  value {
    blob: "(...13824 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  value {
    blob: "(...13824 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  value {
    blob: "(...1536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights"
  value {
    blob: "(...1310720 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights"
  value {
    blob: "(...262144 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights"
  value {
    blob: "(...131072 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights"
  value {
    blob: "(...65536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  value {
    blob: "(...524288 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  value {
    blob: "(...9216 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  value {
    blob: "(...131072 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  value {
    blob: "(...4608 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  value {
    blob: "(...131072 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  value {
    blob: "(...4608 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  value {
    blob: "(...32768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/batchnorm/add/y"
  value {
    blob: "o\022\203:"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
