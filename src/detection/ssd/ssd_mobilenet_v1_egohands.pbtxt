version: 1
descriptor_core_version: 1
descriptors {
  id: "tensorflow_extension"
  version: 1
}
descriptors {
  id: "custom"
  version: 1
}
graphs {
  id: "main"
  nodes {
    id: "NMS"
    inputs: "Squeeze"
    inputs: "concat_priorbox"
    inputs: "concat_box_conf"
    operation: "_NMS_TRT"
    fields {
      key: "backgroundLabelId_u_int"
      value {
        i: 0
      }
    }
    fields {
      key: "confSigmoid_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "confidenceThreshold_u_float"
      value {
        d: 0.30000001192092896
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "inputOrder_u_ilist"
      value {
        i_list {
          val: 0
          val: 2
          val: 1
        }
      }
    }
    fields {
      key: "isNormalized_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "keepTopK_u_int"
      value {
        i: 100
      }
    }
    fields {
      key: "nmsThreshold_u_float"
      value {
        d: 0.6000000238418579
      }
    }
    fields {
      key: "numClasses_u_int"
      value {
        i: 2
      }
    }
    fields {
      key: "shareLocation_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "topK_u_int"
      value {
        i: 100
      }
    }
    fields {
      key: "varianceEncodedInTarget_u_int"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "concat_box_conf"
    inputs: "BoxPredictor_0/Reshape_1"
    inputs: "BoxPredictor_1/Reshape_1"
    inputs: "BoxPredictor_2/Reshape_1"
    inputs: "BoxPredictor_3/Reshape_1"
    inputs: "BoxPredictor_4/Reshape_1"
    inputs: "BoxPredictor_5/Reshape_1"
    operation: "_FlattenConcat_TRT"
    fields {
      key: "axis_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "ignoreBatch_u_int"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/Reshape_1"
    inputs: "BoxPredictor_5/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_5/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_5/stack_1"
    inputs: "BoxPredictor_5/strided_slice"
    inputs: "BoxPredictor_5/stack_1/1"
    inputs: "BoxPredictor_5/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice"
    inputs: "BoxPredictor_5/Shape"
    inputs: "BoxPredictor_5/strided_slice/stack"
    inputs: "BoxPredictor_5/strided_slice/stack_1"
    inputs: "BoxPredictor_5/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/Shape"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 64
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 1024
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 1024
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 1024
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 1024
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 512
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 512
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 512
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 512
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 512
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 512
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 512
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 512
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 256
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 256
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 256
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 128
          val: 256
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 128
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 128
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 128
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 128
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 64
          val: 128
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 64
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 64
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 32
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "number_groups"
      value {
        i: 32
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 32
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu6"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/gamma"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/beta"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
    operation: "BatchNorm"
    fields {
      key: "epsilon"
      value {
        d: 0.0010000000474974513
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/beta"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/beta"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/gamma"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/gamma"
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
    inputs: "Input"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_0/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "FeatureExtractor/MobilenetV1/Conv2d_0/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3
          val: 3
          val: 3
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/weights"
      }
    }
  }
  nodes {
    id: "Input"
    operation: "Input"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 3
          val: 300
          val: 300
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_5/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_5/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/Relu6"
    inputs: "BoxPredictor_5/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 128
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/Reshape_1"
    inputs: "BoxPredictor_4/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_4/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_4/stack_1"
    inputs: "BoxPredictor_4/strided_slice"
    inputs: "BoxPredictor_4/stack_1/1"
    inputs: "BoxPredictor_4/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice"
    inputs: "BoxPredictor_4/Shape"
    inputs: "BoxPredictor_4/strided_slice/stack"
    inputs: "BoxPredictor_4/strided_slice/stack_1"
    inputs: "BoxPredictor_4/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/Shape"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_4/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_4/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_4/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/Reshape_1"
    inputs: "BoxPredictor_3/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_3/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_3/stack_1"
    inputs: "BoxPredictor_3/strided_slice"
    inputs: "BoxPredictor_3/stack_1/1"
    inputs: "BoxPredictor_3/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice"
    inputs: "BoxPredictor_3/Shape"
    inputs: "BoxPredictor_3/strided_slice/stack"
    inputs: "BoxPredictor_3/strided_slice/stack_1"
    inputs: "BoxPredictor_3/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/Shape"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_3/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_3/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_3/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/Reshape_1"
    inputs: "BoxPredictor_2/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_2/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_2/stack_1"
    inputs: "BoxPredictor_2/strided_slice"
    inputs: "BoxPredictor_2/stack_1/1"
    inputs: "BoxPredictor_2/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice"
    inputs: "BoxPredictor_2/Shape"
    inputs: "BoxPredictor_2/strided_slice/stack"
    inputs: "BoxPredictor_2/strided_slice/stack_1"
    inputs: "BoxPredictor_2/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/Shape"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_2/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_2/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "BoxPredictor_2/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/Reshape_1"
    inputs: "BoxPredictor_1/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_1/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_1/stack_1"
    inputs: "BoxPredictor_1/strided_slice"
    inputs: "BoxPredictor_1/stack_1/1"
    inputs: "BoxPredictor_1/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice"
    inputs: "BoxPredictor_1/Shape"
    inputs: "BoxPredictor_1/strided_slice/stack"
    inputs: "BoxPredictor_1/strided_slice/stack_1"
    inputs: "BoxPredictor_1/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/Shape"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_1/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_1/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
    inputs: "BoxPredictor_1/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 1024
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/Reshape_1"
    inputs: "BoxPredictor_0/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_0/stack_1"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_0/stack_1"
    inputs: "BoxPredictor_0/strided_slice"
    inputs: "BoxPredictor_0/stack_1/1"
    inputs: "BoxPredictor_0/stack_1/2"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack_1/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack_1/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack_1/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack_1/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice"
    inputs: "BoxPredictor_0/Shape"
    inputs: "BoxPredictor_0/strided_slice/stack"
    inputs: "BoxPredictor_0/strided_slice/stack_1"
    inputs: "BoxPredictor_0/strided_slice/stack_2"
    operation: "StridedSlice"
    fields {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "end_mask"
      value {
        i: 0
      }
    }
    fields {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice/stack_2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/strided_slice/stack_2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice/stack_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/strided_slice/stack_1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/strided_slice/stack"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/strided_slice/stack"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/Shape"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
    operation: "Shape"
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 6
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/ClassPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/BiasAdd"
    inputs: "BoxPredictor_0/ClassPredictor/Conv2D"
    inputs: "BoxPredictor_0/ClassPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
    inputs: "BoxPredictor_0/ClassPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/ClassPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 6
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/ClassPredictor/weights"
      }
    }
  }
  nodes {
    id: "concat_priorbox"
    inputs: "MultipleGridAnchorGenerator"
    operation: "Concat"
    fields {
      key: "axis"
      value {
        i: 2
      }
    }
  }
  nodes {
    id: "MultipleGridAnchorGenerator"
    inputs: "Const"
    operation: "_GridAnchor_TRT"
    fields {
      key: "aspectRatios_u_flist"
      value {
        d_list {
          val: 1.0
          val: 2.0
          val: 0.5
          val: 3.0
          val: 0.33000001311302185
        }
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "featureMapShapes_u_ilist"
      value {
        i_list {
          val: 19
          val: 10
          val: 5
          val: 3
          val: 2
          val: 1
        }
      }
    }
    fields {
      key: "maxSize_u_float"
      value {
        d: 0.949999988079071
      }
    }
    fields {
      key: "minSize_u_float"
      value {
        d: 0.05000000074505806
      }
    }
    fields {
      key: "numLayers_u_int"
      value {
        i: 6
      }
    }
    fields {
      key: "variance_u_flist"
      value {
        d_list {
          val: 0.10000000149011612
          val: 0.10000000149011612
          val: 0.20000000298023224
          val: 0.20000000298023224
        }
      }
    }
  }
  nodes {
    id: "Const"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 2
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_Const"
      }
    }
  }
  nodes {
    id: "Squeeze"
    inputs: "concat_box_loc"
    operation: "Squeeze"
    fields {
      key: "axes"
      value {
        i_list {
          val: 2
        }
      }
    }
  }
  nodes {
    id: "concat_box_loc"
    inputs: "BoxPredictor_0/Reshape"
    inputs: "BoxPredictor_1/Reshape"
    inputs: "BoxPredictor_2/Reshape"
    inputs: "BoxPredictor_3/Reshape"
    inputs: "BoxPredictor_4/Reshape"
    inputs: "BoxPredictor_5/Reshape"
    operation: "_FlattenConcat_TRT"
    fields {
      key: "axis_u_int"
      value {
        i: 1
      }
    }
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "ignoreBatch_u_int"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/Reshape"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_5/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_5/stack"
    inputs: "BoxPredictor_5/strided_slice"
    inputs: "BoxPredictor_5/stack/1"
    inputs: "BoxPredictor_5/stack/2"
    inputs: "BoxPredictor_5/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/Relu6"
    inputs: "BoxPredictor_5/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_5/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 128
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_5/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/Reshape"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_4/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_4/stack"
    inputs: "BoxPredictor_4/strided_slice"
    inputs: "BoxPredictor_4/stack/1"
    inputs: "BoxPredictor_4/stack/2"
    inputs: "BoxPredictor_4/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_4/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_4/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_4/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/Reshape"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_3/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_3/stack"
    inputs: "BoxPredictor_3/strided_slice"
    inputs: "BoxPredictor_3/stack/1"
    inputs: "BoxPredictor_3/stack/2"
    inputs: "BoxPredictor_3/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/Relu6"
    inputs: "BoxPredictor_3/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_3/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 256
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_3/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/Reshape"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_2/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_2/stack"
    inputs: "BoxPredictor_2/strided_slice"
    inputs: "BoxPredictor_2/stack/1"
    inputs: "BoxPredictor_2/stack/2"
    inputs: "BoxPredictor_2/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/Relu6"
    inputs: "BoxPredictor_2/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_2/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_2/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/Reshape"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_1/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_1/stack"
    inputs: "BoxPredictor_1/strided_slice"
    inputs: "BoxPredictor_1/stack/1"
    inputs: "BoxPredictor_1/stack/2"
    inputs: "BoxPredictor_1/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
    inputs: "BoxPredictor_1/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_1/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 1024
          val: 24
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_1/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/Reshape"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_0/stack"
    operation: "Reshape"
  }
  nodes {
    id: "BoxPredictor_0/stack"
    inputs: "BoxPredictor_0/strided_slice"
    inputs: "BoxPredictor_0/stack/1"
    inputs: "BoxPredictor_0/stack/2"
    inputs: "BoxPredictor_0/stack/3"
    operation: "Stack"
    fields {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack/3"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack/3"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack/2"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack/2"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/stack/1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/stack/1"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/biases"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/BoxEncodingPredictor/biases"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/biases"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
    inputs: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
    inputs: "BoxPredictor_0/BoxEncodingPredictor/weights"
    operation: "Conv"
    fields {
      key: "dilation"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
    fields {
      key: "implicit_padding"
      value {
        s: "same"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "BoxPredictor_0/BoxEncodingPredictor/weights"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1
          val: 1
          val: 512
          val: 12
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_BoxPredictor_0/BoxEncodingPredictor/weights"
      }
    }
  }
  nodes {
    id: "MarkOutput_0"
    inputs: "NMS"
    operation: "MarkOutput"
  }
}
referenced_data {
  key: "orders_N+C"
  value {
    dim_orders_list {
      val {
        orders {
          key: -1
          value {
            val: 0
            val: 2
            val: 2147483647
            val: 1
          }
        }
      }
    }
  }
}
referenced_data {
  key: "orders_N+C_+CK"
  value {
    dim_orders_list {
      val {
        orders {
          key: -1
          value {
            val: 0
            val: 2
            val: 2147483647
            val: 1
          }
        }
      }
      val {
        orders {
          key: -1
          value {
            val: 2
            val: 2147483647
            val: 1
            val: 0
          }
        }
      }
    }
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/BoxEncodingPredictor/biases"
  value {
    blob: "(...48 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/BoxEncodingPredictor/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/ClassPredictor/biases"
  value {
    blob: "\306O\022>\016\363\n\276c\221\030>`a\027\276\232\250\032>\203\370\016\276"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/ClassPredictor/weights"
  value {
    blob: "(...12288 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack/1"
  value {
    blob: ";\004\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack_1/1"
  value {
    blob: ";\004\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/stack_1/2"
  value {
    blob: "\002\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_0/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/BoxEncodingPredictor/weights"
  value {
    blob: "(...98304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/ClassPredictor/biases"
  value {
    blob: "(...48 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/ClassPredictor/weights"
  value {
    blob: "(...49152 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack/1"
  value {
    blob: "X\002\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack_1/1"
  value {
    blob: "X\002\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/stack_1/2"
  value {
    blob: "\002\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_1/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/BoxEncodingPredictor/weights"
  value {
    blob: "(...49152 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/ClassPredictor/biases"
  value {
    blob: "(...48 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/ClassPredictor/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack/1"
  value {
    blob: "\226\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack_1/1"
  value {
    blob: "\226\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/stack_1/2"
  value {
    blob: "\002\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_2/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/BoxEncodingPredictor/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/ClassPredictor/biases"
  value {
    blob: "(...48 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/ClassPredictor/weights"
  value {
    blob: "(...12288 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack/1"
  value {
    blob: "6\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack_1/1"
  value {
    blob: "6\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/stack_1/2"
  value {
    blob: "\002\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_3/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/BoxEncodingPredictor/weights"
  value {
    blob: "(...24576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/ClassPredictor/biases"
  value {
    blob: "(...48 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/ClassPredictor/weights"
  value {
    blob: "(...12288 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack/1"
  value {
    blob: "\030\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack_1/1"
  value {
    blob: "\030\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/stack_1/2"
  value {
    blob: "\002\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_4/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/BoxEncodingPredictor/biases"
  value {
    blob: "(...96 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/BoxEncodingPredictor/weights"
  value {
    blob: "(...12288 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/ClassPredictor/biases"
  value {
    blob: "(...48 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/ClassPredictor/weights"
  value {
    blob: "(...6144 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack/1"
  value {
    blob: "\006\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack/2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack/3"
  value {
    blob: "\004\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack_1/1"
  value {
    blob: "\006\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/stack_1/2"
  value {
    blob: "\002\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/strided_slice/stack"
  value {
    blob: "\000\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/strided_slice/stack_1"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_BoxPredictor_5/strided_slice/stack_2"
  value {
    blob: "\001\000\000\000"
  }
}
referenced_data {
  key: "weights_Const"
  value {
    blob: "\000\000\200?\000\000\200?"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/beta"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/gamma"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_0/weights"
  value {
    blob: "(...3456 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  value {
    blob: "(...18432 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights"
  value {
    blob: "(...1048576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  value {
    blob: "(...18432 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights"
  value {
    blob: "(...1048576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  value {
    blob: "(...18432 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/weights"
  value {
    blob: "(...2097152 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  value {
    blob: "(...36864 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/weights"
  value {
    blob: "(...4194304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_2_1x1_256/weights"
  value {
    blob: "(...1048576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_3_1x1_128/weights"
  value {
    blob: "(...262144 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_4_1x1_128/weights"
  value {
    blob: "(...131072 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_1_Conv2d_5_1x1_64/weights"
  value {
    blob: "(...65536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_2_3x3_s2_512/weights"
  value {
    blob: "(...4718592 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_3_3x3_s2_256/weights"
  value {
    blob: "(...1179648 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_4_3x3_s2_256/weights"
  value {
    blob: "(...1179648 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_13_pointwise_2_Conv2d_5_3x3_s2_128/weights"
  value {
    blob: "(...294912 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  value {
    blob: "(...1152 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights"
  value {
    blob: "(...8192 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  value {
    blob: "(...2304 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights"
  value {
    blob: "(...32768 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  value {
    blob: "(...4608 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights"
  value {
    blob: "(...65536 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...512 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  value {
    blob: "(...4608 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights"
  value {
    blob: "(...131072 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  value {
    blob: "(...9216 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights"
  value {
    blob: "(...262144 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...1024 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  value {
    blob: "(...9216 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights"
  value {
    blob: "(...524288 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  value {
    blob: "(...18432 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights"
  value {
    blob: "(...1048576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  value {
    blob: "(...18432 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights"
  value {
    blob: "(...1048576 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  value {
    blob: "(...18432 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  value {
    blob: "(...2048 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights"
  value {
    blob: "(...1048576 bytes skipped...)"
  }
}
